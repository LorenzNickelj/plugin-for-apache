buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath files("${project.pluginTestDir}/hadoop-plugin-${project.version}.jar")
  }
}

apply plugin: com.linkedin.gradle.hadoop.HadoopPlugin

// Test that the static checker catches read-before-write races involving subworkflows.

hadoop {
  buildPath "jobs"
  cleanPath false

  workflow('subflowReadWriteRace1') {
    pigJob('job1') {
      uses 'src/main/pig/pigScript.pig'
      writes files: [
        'foo' : '/data/databases/foo'
      ]
    }

    workflow('flow1') {
      flowDepends 'job1'
    }

    pigJob('job2') {
      uses 'src/main/pig/pigScript.pig'
      reads files: [
        'foo' : '/data/databases/foo'
      ]
      writes files: [
        'bar' : '/data/databases/bar'
      ]
      depends 'flow1'
    }

    workflow('flow2') {
      flowDepends 'job2'
    }

    pigJob('job3') {
      uses 'src/main/pig/pigScript.pig'
      reads files: [
        'foo' : '/data/databases/foo',
        'bar' : '/data/databases/bar'  // Reads bar, should job3 should depend on either job2 or flow2, but it does not.
      ]
      depends 'flow1'
    }

    targets 'flow2', 'job3'
  }
}