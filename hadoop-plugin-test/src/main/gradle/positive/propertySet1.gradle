buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath files("${project.pluginTestDir}/hadoop-plugin-${project.version}.jar")
  }
}

apply plugin: com.linkedin.gradle.hadoop.HadoopPlugin

// Positive test cases for property sets.

propertySet('propertySet1') {
  set confProperties: [
    'mapred.property1' : 'value1',
    'mapred.property2' : 'value2'
  ]
  set jvmProperties: [
    'jvmPropertyName1' : 'jvm1',
    'jvmPropertyName2' : 'jvm2'
  ]
  set properties: [
    myProperty1 : 'global1',
    myProperty2 : 'global2'
  ]
}

propertyFile('propertyFile1') {
  baseProperties 'propertySet1'
  set confProperties: [
    'mapred.property1' : 'value1Update'
  ]
  set jvmProperties: [
    'jvmPropertyName1' : 'jvm1Update'
  ]
  set properties: [
    myProperty1 : 'global1Update'
  ]
}

pigJob('pigJob1') {
  uses 'src/main/pig/pigScript.pig'
  baseProperties 'propertySet1'
  set confProperties: [
    'mapred.property1' : 'value1Update'
  ]
  set jvmProperties: [
    'jvmPropertyName1' : 'jvm1Update'
  ]
  set properties: [
    myProperty1 : 'global1Update'
  ]
}

hadoop {
  buildPath "jobs"
  cleanPath false

  def propertySet2 = propertySet('propertySet2') {
    set confProperties: [
      'mapred.propertyA' : 'valueA2',
      'mapred.propertyB' : 'valueB2'
    ]
    set jvmProperties: [
      'jvmPropertyNameA' : 'jvmA2',
      'jvmPropertyNameB' : 'jvmB2'
    ]
    set properties: [
      myPropertyA : 'globalA2',
      myPropertyB : 'globalB2'
    ]
  }

  workflow('propertySetWorkflow1') {
    addPropertyFile('propertyFile1') {
    }

    addJob('pigJob1') {
    }

    propertyFile('propertyFile2') {
      baseProperties 'propertySet2'
      set confProperties: [
        'mapred.propertyA' : 'valueA2Update'
      ]
      set jvmProperties: [
        'jvmPropertyNameA' : 'jvmA2Update'
      ]
      set properties: [
        myPropertyA : 'globalA2Update'
      ]
    }

    addJob('pigJob1', 'pigJob2') {
      baseProperties 'propertySet2'
      set confProperties: [
        'mapred.propertyA' : 'valueA2Update'
      ]
      set jvmProperties: [
        'jvmPropertyNameA' : 'jvmA2Update'
      ]
      set properties: [
        myPropertyA : 'globalA2Update'
      ]
    }

    javaProcessJob('javaProcessJob1') {
      uses 'com.linkedin.hello.JavaProcessJob'
      baseProperties 'propertySet2'
      set jvmProperties: [
        'jvmPropertyNameA' : 'jvmA2Update'
      ]
      set properties: [
        myPropertyA : 'globalA2Update'
      ]
    }

    def propertySet3 = propertySet('propertySet3') {
      set confProperties: [
        'mapred.propertyX' : 'valueX',
        'mapred.propertyY' : 'valueY'
      ]
    }

    propertySet3.unionProperties(propertySet2);

    propertyFile('propertyFile3') {
      baseProperties 'propertySet3'
    }

    targets 'pigJob1', 'pigJob2', 'javaProcessJob1'
  }
}